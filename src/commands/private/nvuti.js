import md5 from "md5"

import { depositKeyboard, gamesKeyboard, percentKeyboard } from "../../keyboards/index.js"
import { features, formatSum } from "../../utils/index.js"
import { config } from "../../../main.js"

export const nvuti = {
    access: "private",
    pattern: /^(nvuti|–Ω–≤—É—Ç–∏)$/i,
    handler: async message => {
        if (Number(message.user.balance) < 100_000) {
            return message.send('–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è —Å—Ç–∞–≤–∫–∏ - 100 000', {
                keyboard: gamesKeyboard
            })
        }

        const range = {
            minimum: 50000,
            maximum: 1560000,
        }

        let number = features.random.integer(range.minimum, range.maximum)

        if (number > 1000000) {
            number = features.random.integer(930000, 1000000)
        }

        let salt = features.random.string(features.random.integer(6, 24))
        const hash = md5(`${number}|${salt}`)

        const { text: _betAmount } = await message.question(
            `–û—Ç–ª–∏—á–Ω–æ, –≤–≤–µ–¥–∏ —Å—Ç–∞–≤–∫—É (–æ—Ç 100 000 ${config.bot.currency})\n\n` +
            `üîí –•–µ—à –¥–∞–Ω–Ω–æ–π –∏–≥—Ä—ã: [${hash}]`, {
                keyboard: depositKeyboard(message.user),
                targetUserId: message.peerId
            })

        if(!parseInt(_betAmount) || !_betAmount) {
            return message.send('–í–µ—Ä–Ω—É–ª –≤–∞—Å –≤ –º–µ–Ω—é —Å –∏–≥—Ä–∞–º–∏', {
                keyboard: gamesKeyboard
            })
        }

        const betAmount = formatSum(_betAmount)

        if (!betAmount || isNaN(betAmount) || betAmount < 100000) {
            return message.send('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - 100 000', {
                keyboard: gamesKeyboard
            })
        }

        if (betAmount > config.bot.max_bet) {
            return message.send(`–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - ${features.split(config.bot.max_bet)}`, {
                keyboard: gamesKeyboard
            })
        }

        if (Number(message.user.balance) < betAmount) {
            return message.send(`–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!`, {
                keyboard: gamesKeyboard
            })
        }

        const percent = await message.question('–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —à–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞. ', {
            targetUserId: message.senderId,
            keyboard: percentKeyboard
        })

        const input = percent.payload ? percent.payload.command : percent.text
        const chance = Number.parseInt(input)

        if (!chance || chance < 1 || chance > 95) {
            return message.send('–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã–ª –≤–≤–µ—Å—Ç–∏ —à–∞–Ω—Å –æ—Ç 1 –¥–æ 95.', {
                keyboard: gamesKeyboard
            })
        }

        const win = number <= chance * 10000
        const amount = chance !== 50
            ? (betAmount * 100 / (chance + 2.5)) - betAmount
            : (betAmount * 100 / (chance)) - betAmount

        if (win) {
            message.user.balance = Number(message.user.balance) + amount
            await message.user.save()

            await message.send(
                `–ò—Ç–æ–≥ –∏–≥—Ä—ã:\n` +
                `üí∞ –¢—ã –ø–æ—Å—Ç–∞–≤–∏–ª ${features.split(betAmount)} ${config.bot.currency} –∏ –≤—ã–∏–≥—Ä–∞–ª.\n` +
                `üé± –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ ${features.split(number)}, –∞ —Ç—ã –ø–æ—Å—Ç–∞–≤–∏–ª –¥–æ ${features.split(chance * 10000)} (${chance}%)!\n\n` +
                `üîí –•–µ—à –¥–∞–Ω–Ω–æ–π –∏–≥—Ä—ã: [${hash}]\n` +
                `üìú –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: [${number}|${salt}]`, {
                keyboard: gamesKeyboard
            })
        } else {
            message.user.balance = Number(message.user.balance) - betAmount
            await message.user.save()

            await message.send(
                `–ò—Ç–æ–≥ –∏–≥—Ä—ã:\n` +
                `üí∞ –¢—ã –ø–æ—Å—Ç–∞–≤–∏–ª ${features.split(betAmount)} EC –∏ –ø—Ä–æ–∏–≥—Ä–∞–ª.\n` +
                `üé± –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ ${features.split(number)}, –∞ —Ç—ã –ø–æ—Å—Ç–∞–≤–∏–ª –¥–æ ${features.split(chance * 10000)} (${chance}%)!\n\n` +
                `üîí –•–µ—à –¥–∞–Ω–Ω–æ–π –∏–≥—Ä—ã: [${hash}]\n` +
                `üìú –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: [${number}|${salt}]`, {
                keyboard: gamesKeyboard
            })
        }
    }
}