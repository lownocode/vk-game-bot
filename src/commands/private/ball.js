import md5 from "md5"

import {
    confirmationKeyboard,
    depositKeyboard,
    gamesKeyboard,
    percentKeyboard
} from "../../keyboards/index.js"
import { features } from "../../utils/index.js"
import { config } from "../../../main.js"
import { formatAmount, formatSum } from "../../utils/index.js"

export const ball = {
    access: "private",
    pattern: /^–º—è—á$/i,
    handler: async message => {
        const { text: _betAmount } = await message.question(
            "–í—ã –∏–≥—Ä–∞–µ—Ç–µ –≤ ¬´–ú—è—á¬ª.\n" +
            `–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ${features.split(message.user.balance + message.user.bonusBalance)}\n` +
            "–£–∫–∞–∂–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –∫–æ–∏–Ω–æ–≤ –≤—ã —Å—Ç–∞–≤–∏—Ç–µ –Ω–∞ –ø–æ–ø–∞–¥–∞–Ω–∏–µ –≤ –∫–æ–ª—å—Ü–æ:", {
                targetUserId: message.peerId,
                keyboard: depositKeyboard(message.user)
            })

        if (!parseInt(_betAmount) || !_betAmount) {
            return message.send('–í–µ—Ä–Ω—É–ª –≤–∞—Å –≤ –º–µ–Ω—é —Å –∏–≥—Ä–∞–º–∏', {
                keyboard: gamesKeyboard
            })
        }

        const betAmount = formatSum(_betAmount)

        if (!betAmount || isNaN(betAmount) || betAmount < 100000) {
            return message.send("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - 100 000", {
                keyboard: gamesKeyboard
            })
        }

        if (betAmount > config.bot.max_bet) {
            return message.send(`–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - ${features.split(config.bot.max_bet)}`, {
                keyboard: gamesKeyboard
            })
        }

        if (Number(message.user.balance) < betAmount) {
            return message.send(`–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!`, {
                keyboard: gamesKeyboard
            })
        }

        const { text: _percent } = await message.question(
            'üèÄ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏—é.\n' +
            '–ß–µ–º –±–æ–ª—å—à–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏—è, —Ç–µ–º –±–æ–ª—å—à–µ —à–∞–Ω—Å –ø–æ–ø–∞—Å—Ç—å –≤ –∫–æ–ª—å—Ü–æ, –Ω–æ –º–µ–Ω—å—à–µ –≤—ã–∏–≥—Ä–∞—Ç—å –∫–æ–∏–Ω–æ–≤.', {
                targetUserId: message.senderId,
                keyboard: percentKeyboard
            })

        const percent = parseInt(_percent)

        if (
            (percent !== 10) &&
            (percent !== 20) &&
            (percent !== 30) &&
            (percent !== 40) &&
            (percent !== 50) &&
            (percent !== 60)
        ) {
            return message.send('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å.', {
                keyboard: gamesKeyboard
            })
        }

        const coef = parseFloat(100 / parseInt(percent))
        const win = parseInt(betAmount * coef)
        let randomPercent = features.random.integer(1, 130)

        if (randomPercent >= 60) {
            randomPercent = features.random.integer(50, 100)
        }

        const salt = features.random.string(7)
        const hash =  md5(`${randomPercent}|BALL|${salt}`)

        const { payload: confirmation } = await message.question(
            `–î–∏—Å—Ç–∞–Ω—Ü–∏—è: ${percent}.\n` +
            `–°—Ç–∞–≤–∫–∞: ${formatAmount(betAmount)}.\n` +
            `–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–∏–≥—Ä–∞—Ç—å: ${features.split(Math.abs(win))}.\n` +
            `–•—ç—à: ${hash}\n` +
            `–ë—Ä–æ—Å–∞—Ç—å?`, {
                targetUserId: message.senderId,
                keyboard: confirmationKeyboard
            })

        if (!confirmation.command) {
            return message.send('–í–µ—Ä–Ω—É–ª –≤–∞—Å –≤ –º–µ–Ω—é —Å –∏–≥—Ä–∞–º–∏', {
                keyboard: gamesKeyboard
            })
        }

        message.user.balance = Number(message.user.balance) + betAmount
        await message.user.save()

        if (percent >= randomPercent) {
            message.user.balance = Number(message.user.balance) + win

            await message.user.save()
            await message.send(
                `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –ø–æ–ø–∞–ª–∏ –≤ –∫–æ–ª—å—Ü–æ!\n` +
                `–°—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ${randomPercent}|BALL|${salt}\n` +
                `–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –¥–ª—è –ø–æ–ø–∞–¥–∞–Ω–∏—è –±—ã–ª–∞: ${randomPercent}\n\n` +
                `–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${features.split(Math.abs(win))} –∫–æ–∏–Ω–æ–≤.`, {
                    keyboard: gamesKeyboard
                })
        } else {
            message.send(
                `–ñ–∞–ª—å, –Ω–æ –≤—ã –Ω–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–æ–ª—å—Ü–æ.\n` +
                `–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –¥–ª—è –ø–æ–ø–∞–¥–∞–Ω–∏—è –±—ã–ª–∞: ${randomPercent}.\n` +
                `–°—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ${randomPercent}|BALL|${salt}`, {
                    keyboard: gamesKeyboard
                })
        }
    }
}